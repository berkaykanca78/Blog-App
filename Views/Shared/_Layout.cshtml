<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>@ViewBag.Title</title>

    <!-- Favicon -->
    <link rel="icon" type="image/png" sizes="32x32" href="~/favicon.ico">
    <link rel="icon" type="image/png" sizes="16x16" href="~/favicon.ico">
    <link rel="apple-touch-icon" sizes="180x180" href="~/favicon.ico">
    <link rel="shortcut icon" href="~/favicon.ico">
    <meta name="msapplication-TileImage" content="~/favicon.ico">
    <meta name="msapplication-TileColor" content="#007bff">
    <meta name="theme-color" content="#007bff">

    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">

    <!-- Custom CSS -->
    <link href="~/Content/style.css" rel="stylesheet">

    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    
    <!-- Render page-specific styles -->
    @RenderSection("Styles", required: false)
    
<style>
    /* CSS Variables for Theme Colors - Softer and more pleasant */
    :root {
        --bg-primary: #fafafa;
        --bg-secondary: #f5f5f5;
        --bg-dark: #2c3e50;
        --text-primary: #2c3e50;
        --text-secondary: #7f8c8d;
        --text-white: #ffffff;
        --border-color: #e0e0e0;
        --navbar-bg: #ffffff;
        --card-bg: #ffffff;
        --footer-bg: #34495e;
        --search-bg: #ffffff;
        --search-border: #3498db;
        --theme-primary: #3498db;
        --theme-success: #27ae60;
        --shadow-light: rgba(52, 73, 94, 0.1);
        --shadow-medium: rgba(52, 73, 94, 0.15);
    }

    /* Dark Theme Variables - Softer dark colors */
    [data-theme="dark"] {
        --bg-primary: #2c3e50;
        --bg-secondary: #34495e;
        --bg-dark: #1a252f;
        --text-primary: #ecf0f1;
        --text-secondary: #bdc3c7;
        --text-white: #ffffff;
        --border-color: #4a6741;
        --navbar-bg: #34495e;
        --card-bg: #34495e;
        --footer-bg: #1a252f;
        --search-bg: #34495e;
        --search-border: #5dade2;
        --theme-primary: #5dade2;
        --theme-success: #58d68d;
        --shadow-light: rgba(236, 240, 241, 0.1);
        --shadow-medium: rgba(236, 240, 241, 0.15);
    }

    /* Smooth transitions for all elements */
    * {
        transition: background-color 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94), color 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94), border-color 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94), box-shadow 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

    /* Apply theme variables to body and main elements */
    body {
        background-color: var(--bg-primary) !important;
        color: var(--text-primary) !important;
        transition: background-color 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94), color 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

    /* All headings */
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        color: var(--text-primary) !important;
        transition: color 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

    /* All paragraphs and text elements */
    p,
    span,
    div,
    li,
    a {
        color: inherit;
        transition: color 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

    /* Specific text classes */
    .text-muted {
        color: var(--text-secondary) !important;
    }

    .text-dark {
        color: var(--text-primary) !important;
    }

    /* Navbar aktif link için özel stil */
    .navbar {
        background-color: var(--navbar-bg) !important;
        border-bottom: 1px solid var(--border-color);
        transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        box-shadow: 0 2px 10px var(--shadow-light);
    }

        .navbar .navbar-brand {
            color: var(--text-primary) !important;
            transition: color 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        }

        .navbar .nav-link {
            color: var(--text-primary) !important;
            transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        }

            .navbar .nav-link.active {
                color: var(--theme-primary) !important;
                font-weight: 600;
                background-color: rgba(52, 152, 219, 0.1);
                border-radius: 4px;
            }

            /* Hover durumu için yeşil renk koruyoruz */
            .navbar .nav-link:hover {
                color: var(--theme-success) !important;
                transform: translateY(-1px);
            }

            /* Aktif link hover durumu */
            .navbar .nav-link.active:hover {
                color: var(--theme-primary) !important;
                background-color: rgba(52, 152, 219, 0.15);
            }

    /* Navbar brand için aktif renk */
    .navbar-brand {
        font-weight: 700 !important;
    }

    /* Navbar toggler for dark theme */
    .navbar-toggler {
        border-color: var(--border-color) !important;
    }

    .navbar-toggler-icon {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%2844, 62, 80, 0.75%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e") !important;
    }

    [data-theme="dark"] .navbar-toggler-icon {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%28236, 240, 241, 0.75%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e") !important;
    }

    /* Top bar sosyal medya linklerinin hover efekti */
    .top-bar {
        background-color: var(--bg-dark) !important;
        color: var(--text-white) !important;
        position: relative;
        z-index: 1500;
        transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

        .top-bar .social-links a {
            color: var(--text-white) !important;
            transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        }

            .top-bar .social-links a:hover {
                color: var(--theme-primary) !important;
                transform: translateY(-2px) scale(1.1);
            }

    /* Navbar z-index */
    .navbar {
        z-index: 1400;
    }

    /* Footer styling - Fixed visibility issues */
    footer {
        background-color: var(--footer-bg) !important;
        border-top: 1px solid var(--border-color);
        transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

        /* Footer headings - Fixed for both themes */
        footer h5 {
            color: var(--text-white) !important;
            font-weight: 600 !important;
            margin-bottom: 1.5rem;
            transition: color 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        }

        /* Footer text elements */
        footer .text-white {
            color: var(--text-white) !important;
        }

        footer .text-white-50,
        footer small {
            color: rgba(255, 255, 255, 0.7) !important;
            transition: color 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        }

        footer p {
            color: rgba(255, 255, 255, 0.8) !important;
        }

        footer a {
            color: rgba(255, 255, 255, 0.7) !important;
            transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        }

            footer a:hover {
                color: var(--text-white) !important;
                transform: translateX(3px);
            }

        footer li {
            color: rgba(255, 255, 255, 0.8) !important;
        }

    /* Card styling */
    .card,
    .post-card {
        background-color: var(--card-bg) !important;
        border: 1px solid var(--border-color);
        color: var(--text-primary) !important;
        transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        box-shadow: 0 4px 15px var(--shadow-light);
    }

    .card-title,
    .card-text {
        color: var(--text-primary) !important;
    }

        .card-text.text-muted {
            color: var(--text-secondary) !important;
        }

    /* Post meta styling - Fixed contrast issues */
    .post-meta,
    .meta-info,
    .article-meta {
        color: var(--text-secondary) !important;
        font-size: 0.9rem;
        transition: color 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

        .post-meta span,
        .meta-info span {
            color: var(--text-secondary) !important;
        }

    /* Reading time and similar meta elements */
    .reading-time,
    .post-date,
    .post-author {
        color: var(--text-secondary) !important;
        transition: color 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

    /* Theme Toggle Button Styles */
    .theme-toggle {
        background: none;
        border: none;
        color: var(--text-white);
        font-size: 18px;
        cursor: pointer;
        padding: 8px;
        border-radius: 50%;
        transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        margin-right: 15px;
        width: 36px;
        height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .theme-toggle:hover {
            background-color: rgba(255, 255, 255, 0.15);
            color: var(--theme-primary);
            transform: scale(1.15) rotate(180deg);
        }

        .theme-toggle .fa-sun {
            display: none;
            transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        }

        .theme-toggle .fa-moon {
            display: inline;
            transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        }

    [data-theme="dark"] .theme-toggle .fa-sun {
        display: inline;
    }

    [data-theme="dark"] .theme-toggle .fa-moon {
        display: none;
    }

    /* Scroll to Top Button */
    .scroll-to-top {
        position: fixed;
        bottom: 30px;
        right: 30px;
        width: 50px;
        height: 50px;
        background: linear-gradient(135deg, var(--theme-primary), var(--theme-success));
        color: white;
        border: none;
        border-radius: 50%;
        font-size: 18px;
        cursor: pointer;
        z-index: 1000;
        opacity: 0;
        visibility: hidden;
        transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        box-shadow: 0 4px 15px var(--shadow-medium);
    }

        .scroll-to-top.show {
            opacity: 1;
            visibility: visible;
        }

        .scroll-to-top:hover {
            transform: translateY(-5px) scale(1.1);
            box-shadow: 0 8px 25px var(--shadow-medium);
        }

        .scroll-to-top:active {
            transform: translateY(-3px) scale(1.05);
        }

    /* Mobile responsive */
    @@media (max-width: 768px) {
        .scroll-to-top {
            bottom: 20px;
            right: 20px;
            width: 45px;
            height: 45px;
            font-size: 16px;
        }
    }

    /* Search Box Styles */
    .search-container {
        position: relative;
        display: inline-block;
        z-index: 2000;
    }

    .search-box {
        position: absolute;
        right: 0;
        top: 50%;
        transform: translateY(-50%);
        width: 0;
        height: 35px;
        background: var(--search-bg);
        border: 2px solid var(--search-border);
        border-radius: 20px;
        padding: 0;
        opacity: 0;
        transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        overflow: hidden;
        z-index: 2001;
        box-shadow: 0 4px 15px var(--shadow-light);
    }

        .search-box.active {
            width: 250px;
            opacity: 1;
            padding: 0 35px 0 15px;
            box-shadow: 0 8px 25px var(--shadow-medium);
        }

    .search-input {
        width: 100%;
        height: 100%;
        border: none;
        outline: none;
        background: transparent;
        color: var(--text-primary);
        font-size: 14px;
        transition: color 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

        .search-input::placeholder {
            color: var(--text-secondary);
            transition: color 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        }

    .search-icon {
        position: relative;
        color: var(--text-white);
        cursor: pointer;
        z-index: 2002;
        transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        font-size: 16px;
        display: inline-block;
    }

        .search-icon:hover {
            color: var(--theme-primary);
            transform: scale(1.2) rotate(90deg);
        }

    .search-btn {
        position: absolute;
        right: 5px;
        top: 50%;
        transform: translateY(-50%);
        background: var(--theme-primary);
        color: white;
        border: none;
        width: 25px;
        height: 25px;
        border-radius: 50%;
        font-size: 12px;
        cursor: pointer;
        transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        opacity: 0;
        z-index: 2002;
    }

    .search-box.active .search-btn {
        opacity: 1;
    }

    .search-btn:hover {
        background: var(--theme-success);
        transform: translateY(-50%) scale(1.2);
    }

    /* Top bar search specific styles */
    .top-bar .search-container {
        position: relative;
        z-index: 2100;
        display: flex;
        align-items: center;
        justify-content: flex-end;
    }

    .top-bar .search-icon {
        color: var(--text-white) !important;
        font-size: 18px !important;
        margin-right: 10px;
    }

        .top-bar .search-icon:hover {
            color: var(--theme-primary) !important;
        }

    /* When search box is active, hide the standalone icon */
    .top-bar .search-container.search-active .search-icon {
        opacity: 0;
        pointer-events: none;
    }

    /* Position search box relative to container */
    .top-bar .search-box {
        position: absolute;
        right: 0;
        top: 50%;
        transform: translateY(-50%);
    }

    @@media (max-width: 768px) {
        .search-box.active {
            width: 200px;
        }

        .search-container {
            z-index: 2200;
        }

        .theme-toggle {
            margin-right: 10px;
            font-size: 16px;
            width: 32px;
            height: 32px;
        }
    }

    /* Additional dark theme styles for form elements */
    [data-theme="dark"] input,
    [data-theme="dark"] textarea,
    [data-theme="dark"] select {
        background-color: var(--bg-secondary) !important;
        color: var(--text-primary) !important;
        border-color: var(--border-color) !important;
    }

    [data-theme="dark"] .bg-light {
        background-color: var(--bg-secondary) !important;
    }

    [data-theme="dark"] .bg-white {
        background-color: var(--bg-primary) !important;
    }

    [data-theme="dark"] .text-dark {
        color: var(--text-primary) !important;
    }

    [data-theme="dark"] .text-muted {
        color: var(--text-secondary) !important;
    }

    [data-theme="dark"] .border {
        border-color: var(--border-color) !important;
    }

    /* Content area styling */
    .content,
    .main-content,
    .article-content {
        color: var(--text-primary) !important;
        transition: color 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

        .content h1,
        .content h2,
        .content h3,
        .content h4,
        .content h5,
        .content h6,
        .main-content h1,
        .main-content h2,
        .main-content h3,
        .main-content h4,
        .main-content h5,
        .main-content h6,
        .article-content h1,
        .article-content h2,
        .article-content h3,
        .article-content h4,
        .article-content h5,
        .article-content h6 {
            color: var(--text-primary) !important;
        }

        .content p,
        .main-content p,
        .article-content p {
            color: var(--text-primary) !important;
        }

    /* Blog post styling */
    .blog-post,
    .post-content {
        color: var(--text-primary) !important;
    }

        .blog-post h1,
        .blog-post h2,
        .blog-post h3,
        .blog-post h4,
        .blog-post h5,
        .blog-post h6 {
            color: var(--text-primary) !important;
        }

    .post-meta {
        color: var(--text-secondary) !important;
    }

    /* Ensure all Bootstrap utility classes work with themes */
    .lead {
        color: var(--text-primary) !important;
    }

    .small,
    small {
        color: var(--text-secondary) !important;
    }

    /* Badge styling */
    .badge {
        transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        background-color: var(--theme-primary) !important;
        color: var(--text-white) !important;
    }

    /* Button styling for themes */
    .btn {
        transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

        .btn:hover {
            transform: translateY(-2px);
        }

    /* List styling */
    .list-group-item {
        background-color: var(--card-bg) !important;
        border-color: var(--border-color) !important;
        color: var(--text-primary) !important;
    }

    /* Alert styling */
    .alert {
        border-color: var(--border-color) !important;
        color: var(--text-primary) !important;
    }

    /* Blockquote styling */
    blockquote {
        border-left: 4px solid var(--theme-primary);
        background-color: var(--bg-secondary) !important;
        color: var(--text-primary) !important;
    }

    /* Additional fixes for common elements */
    .text-secondary {
        color: var(--text-secondary) !important;
    }

    /* Breadcrumb styling */
    .breadcrumb {
        background-color: var(--bg-secondary) !important;
    }

    .breadcrumb-item {
        color: var(--text-secondary) !important;
    }

        .breadcrumb-item.active {
            color: var(--text-primary) !important;
        }
</style>
</head>
<body>
    <!-- Top Bar -->
    <div class="top-bar bg-dark text-white py-2">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <div class="social-links">
                        <a href="#" class="text-white me-3"><i class="fab fa-facebook-f"></i></a>
                        <a href="#" class="text-white me-3"><i class="fab fa-twitter"></i></a>
                        <a href="#" class="text-white me-3"><i class="fab fa-instagram"></i></a>
                        <a href="#" class="text-white"><i class="fab fa-linkedin-in"></i></a>
                    </div>
                </div>
                <div class="col-md-6 text-end">
                    <div class="d-flex align-items-center justify-content-end">
                        <!-- Theme Toggle Button -->
                        <button class="theme-toggle" id="themeToggle" title="Tema Değiştir">
                            <i class="fas fa-sun"></i>
                            <i class="fas fa-moon"></i>
                        </button>
                        
                        <!-- Search Container -->
                        <div class="search-container">
                            <i class="fas fa-search search-icon" id="searchIcon"></i>
                            <div class="search-box" id="searchBox">
                                <form action="@Url.Action("Search", "Home")" method="get" style="display: inline;">
                                    <input type="text" name="query" class="search-input" placeholder="Ara..." id="searchInput" />
                                    <button type="submit" class="search-btn" id="searchBtn">
                                        <i class="fas fa-arrow-right"></i>
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Navigation -->
    <nav class="navbar navbar-expand-lg navbar-light bg-white sticky-top">
        <div class="container">
            <a class="navbar-brand" href="@Url.Action("Index", "Home")">
                Blog
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link @(ViewBag.NavigationPage == "Index" ? "active" : "")" href="@Url.Action("Index", "Home")">Ana Sayfa</a>
                    </li>
                    @{
                        var navigationCategories = ViewBag.NavigationCategories as List<BlogApp.Models.CategoryViewModel>;
                    }
                    @if (navigationCategories != null && navigationCategories.Any())
                    {
                        foreach (var category in navigationCategories)
                        {
                            <li class="nav-item">
                                <a class="nav-link @(ViewBag.CurrentCategory == category.Slug ? "active" : "")" 
                                   href="@Url.Action("Category", "Home", new { category = category.Slug })">@category.Name</a>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
    </nav>

    @RenderBody()

    <!-- Scroll to Top Button -->
    <button class="scroll-to-top" id="scrollToTop" title="Yukarı Git">
        <i class="fas fa-chevron-up"></i>
    </button>

    <!-- Footer -->
    <footer class="bg-dark text-white py-5">
        <div class="container">
            <div class="row">
                <div class="col-lg-4">
                    <h5 class="mb-4">
                        Yazılım Dünyası'ndaki Gelişmeler
                    </h5>
                    <small class="text-white-50">Teknoloji dünyasından en güncel haberler</small>
                    <div class="social-links mt-4">
                        <a href="#" class="text-white-50 me-3"><i class="fab fa-facebook-f"></i></a>
                        <a href="#" class="text-white-50 me-3"><i class="fab fa-twitter"></i></a>
                        <a href="#" class="text-white-50 me-3"><i class="fab fa-instagram"></i></a>
                        <a href="#" class="text-white-50"><i class="fab fa-linkedin-in"></i></a>
                    </div>
                </div>
                <div class="col-lg-2">
                    <h5 class="mb-4">Kategoriler</h5>
                    <ul class="list-unstyled">
                        @{
                            var footerCategories = ViewBag.NavigationCategories as List<BlogApp.Models.CategoryViewModel>;
                        }
                        @if (footerCategories != null && footerCategories.Any())
                        {
                            foreach (var category in footerCategories)
                            {
                                <li><a href="@Url.Action("Category", "Home", new { category = category.Slug })" class="text-white-50">@category.Name</a></li>
                            }
                        }
                    </ul>
                </div>
                <div class="col-lg-2">
                    <h5 class="mb-4">Hızlı Linkler</h5>
                    <ul class="list-unstyled">
                        <li><a href="#" class="text-white-50">Hakkımızda</a></li>
                        <li><a href="#" class="text-white-50">İletişim</a></li>
                        <li><a href="#" class="text-white-50">Yazarlar</a></li>
                        <li><a href="#" class="text-white-50">Gizlilik</a></li>
                        <li><a href="#" class="text-white-50">Kullanım Şartları</a></li>
                    </ul>
                </div>
                <div class="col-lg-4">
                    <h5 class="mb-4">İletişim</h5>
                    <ul class="list-unstyled">
                        <li><i class="fas fa-map-marker-alt me-2"></i> Ankara, Türkiye</li>
                        <li><i class="fas fa-phone me-2"></i> +90 505 618 1906</li>
                        <li><i class="fas fa-envelope me-2"></i> info@berkaykanca.com</li>
                    </ul>
                </div>
            </div>
            <hr class="my-4">
            <div class="text-center">
                <p class="mb-0">Berkay Kanca - Blog - <strong>&copy;</strong> <span id="year"></span> - Tüm Hakları Saklıdır.</p>
            </div>
        </div>
    </footer>

    <!-- Scripts -->
    @Scripts.Render("~/bundles/jquery")
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/Scripts/main.js"></script>
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
    
    <script>
        document.getElementById("year").innerHTML = new Date().getFullYear();
        
        // Theme Toggle Functionality
        const themeToggle = document.getElementById('themeToggle');
        const body = document.body;
        
        // Load saved theme from localStorage or default to light theme
        const savedTheme = localStorage.getItem('theme') || 'light';
        body.setAttribute('data-theme', savedTheme);
        
        // Theme toggle event listener
        themeToggle.addEventListener('click', function() {
            const currentTheme = body.getAttribute('data-theme');
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
            
            body.setAttribute('data-theme', newTheme);
            localStorage.setItem('theme', newTheme);
            
            // Optional: Add a small animation effect
            themeToggle.style.transform = 'scale(0.9)';
            setTimeout(() => {
                themeToggle.style.transform = 'scale(1)';
            }, 150);
        });
        
        // Scroll to Top Button Functionality
        const scrollToTopBtn = document.getElementById('scrollToTop');
        
        // Show/hide button based on scroll position
        window.addEventListener('scroll', function() {
            if (window.pageYOffset > 300) {
                scrollToTopBtn.classList.add('show');
            } else {
                scrollToTopBtn.classList.remove('show');
            }
        });
        
        // Smooth scroll to top when button is clicked
        scrollToTopBtn.addEventListener('click', function() {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        });

        // Search Box Functionality
        const searchContainer = document.querySelector('.search-container');
        const searchBox = document.getElementById('searchBox');
        const searchIcon = document.getElementById('searchIcon');
        const searchInput = document.getElementById('searchInput');
        let searchTimeout;

        // Show search box on hover
        searchContainer.addEventListener('mouseenter', function() {
            clearTimeout(searchTimeout);
            searchBox.classList.add('active');
            searchContainer.classList.add('search-active');
            setTimeout(() => {
                searchInput.focus();
            }, 400);
        });

        // Hide search box when mouse leaves and no focus
        searchContainer.addEventListener('mouseleave', function() {
            if (document.activeElement !== searchInput) {
                searchTimeout = setTimeout(() => {
                    searchBox.classList.remove('active');
                    searchContainer.classList.remove('search-active');
                }, 300);
            }
        });

        // Keep search box open when input is focused
        searchInput.addEventListener('focus', function() {
            clearTimeout(searchTimeout);
            searchBox.classList.add('active');
            searchContainer.classList.add('search-active');
        });

        // Hide search box when input loses focus
        searchInput.addEventListener('blur', function() {
            searchTimeout = setTimeout(() => {
                searchBox.classList.remove('active');
                searchContainer.classList.remove('search-active');
            }, 300);
        });

        // Handle Enter key press
        searchInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                if (searchInput.value.trim() !== '') {
                    searchInput.closest('form').submit();
                }
            }
        });

        // Handle search icon click
        searchIcon.addEventListener('click', function() {
            if (searchBox.classList.contains('active')) {
                if (searchInput.value.trim() !== '') {
                    searchInput.closest('form').submit();
                } else {
                    searchInput.focus();
                }
            } else {
                searchBox.classList.add('active');
                searchContainer.classList.add('search-active');
                setTimeout(() => {
                    searchInput.focus();
                }, 400);
            }
        });
    </script>
</body>
</html>
